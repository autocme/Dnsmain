<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- DNS Records Tree View -->
    <record id="view_dns_record_tree" model="ir.ui.view">
        <field name="name">dns.subdomain.tree</field>
        <field name="model">dns.subdomain</field>
        <field name="arch" type="xml">
            <tree string="DNS Records">
                <field name="name"/>
                <field name="domain_id"/>
                <field name="full_domain"/>
                <field name="type"/>
                <field name="value"/>
                <field name="ttl"/>
                <field name="active"/>
            </tree>
        </field>
    </record>

    <!-- DNS Record Form View -->
    <record id="view_dns_record_form" model="ir.ui.view">
        <field name="name">dns.subdomain.form</field>
        <field name="model">dns.subdomain</field>
        <field name="arch" type="xml">
            <form string="DNS Record">
                <sheet>
                    <div class="oe_title">
                        <label for="name" class="oe_edit_only"/>
                        <h1>
                            <field name="name" placeholder="e.g. www"/>
                        </h1>
                    </div>
                    <group>
                        <group>
                            <field name="domain_id"/>
                            <field name="full_domain" readonly="1"/>
                            <field name="active"/>
                        </group>
                        <group>
                            <field name="type"/>
                            <field name="ttl"/>
                        </group>
                    </group>
                    
                    <!-- Record value section with contextual help based on record type -->
                    <group>
                        <field name="placeholder_helper" invisible="1"/>
                        <field name="value" placeholder="Enter record value based on selected type"/>
                    </group>
                    
                    <!-- Contextual help section -->
                    <group string="Record Format Help" invisible="not type">
                        <div invisible="type != 'a'">
                            <strong>A Record Format:</strong> IPv4 address (e.g., 192.168.1.1)<br/>
                            <em>Maps a domain name to an IPv4 address.</em>
                        </div>
                        <div invisible="type != 'aaaa'">
                            <strong>AAAA Record Format:</strong> IPv6 address (e.g., 2001:db8::1)<br/>
                            <em>Maps a domain name to an IPv6 address.</em>
                        </div>
                        <div invisible="type != 'cname'">
                            <strong>CNAME Record Format:</strong> Domain name (e.g., target.example.com)<br/>
                            <em>Creates an alias from one domain to another. The source cannot have other record types.</em>
                        </div>
                        <div invisible="type != 'mx'">
                            <strong>MX Record Format:</strong> Priority and domain (e.g., 10 mail.example.com)<br/>
                            <em>Specifies mail servers for a domain and their priority. Lower priority values are preferred.</em>
                        </div>
                        <div invisible="type != 'ns'">
                            <strong>NS Record Format:</strong> Domain name (e.g., ns1.example.com)<br/>
                            <em>Delegates a domain or subdomain to a set of name servers.</em>
                        </div>
                        <div invisible="type != 'txt'">
                            <strong>TXT Record Format:</strong> Text value in quotes (e.g., "v=spf1 include:_spf.example.com ~all")<br/>
                            <em>Stores text information associated with a domain, often used for verification.</em>
                        </div>
                        <div invisible="type != 'srv'">
                            <strong>SRV Record Format:</strong> Priority weight port target (e.g., 0 5 5060 sip.example.com)<br/>
                            <em>Specifies location of services (like SIP, XMPP) with priority, weight, port and target host.</em>
                        </div>
                        <div invisible="type != 'caa'">
                            <strong>CAA Record Format:</strong> Flag tag value (e.g., 0 issue "ca.example.com")<br/>
                            <em>Specifies which Certificate Authorities are allowed to issue certificates for a domain.</em>
                        </div>
                        <div invisible="type != 'ds'">
                            <strong>DS Record Format:</strong> Key tag algorithm digest-type digest (e.g., 12345 8 2 ABCDEF...)<br/>
                            <em>Part of DNSSEC, contains hash of DNSKEY record for a delegated zone.</em>
                        </div>
                        <div invisible="type != 'https'">
                            <strong>HTTPS Record Format:</strong> Priority target parameters (e.g., 1 . alpn=h3,h2 ipv4hint=192.0.2.1)<br/>
                            <em>Enables secure connection to a service, providing connection parameters and hints.</em>
                        </div>
                        <div invisible="type != 'svcb'">
                            <strong>SVCB Record Format:</strong> Priority target parameters (e.g., 1 . alpn=h3,h2 ipv4hint=192.0.2.1)<br/>
                            <em>Service binding record, generic version of HTTPS record, enables service endpoint discovery.</em>
                        </div>
                        <div invisible="type != 'tlsa'">
                            <strong>TLSA Record Format:</strong> Usage selector matching-type certificate-data (e.g., 3 0 1 ABCDEF...)<br/>
                            <em>Associates TLS certificate with domain name, part of DANE protocol.</em>
                        </div>
                        <div invisible="type != 'sshfp'">
                            <strong>SSHFP Record Format:</strong> Algorithm fingerprint-type fingerprint (e.g., 2 1 123456789ABCDEF...)<br/>
                            <em>Stores SSH public key fingerprints, allows SSH clients to verify server host keys.</em>
                        </div>
                        <div invisible="type != 'naptr'">
                            <strong>NAPTR Record Format:</strong> Order pref flags service regexp replacement (e.g., 10 100 "S" "SIP+D2U" "!^.*$!sip:example.com!" _sip._udp.example.com)<br/>
                            <em>Used for ENUM and other applications, provides rules for rewriting domain names.</em>
                        </div>
                        <div invisible="type != 'ptr'">
                            <strong>PTR Record Format:</strong> Domain name (e.g., host.example.com)<br/>
                            <em>Maps an IP address to a domain name, used for reverse DNS lookups.</em>
                        </div>
                        <div invisible="type != 'spf'">
                            <strong>SPF Record Format:</strong> SPF policy (e.g., v=spf1 ip4:192.168.1.1 ~all)<br/>
                            <em>Specifies authorized mail servers for a domain. Now usually implemented as TXT records.</em>
                        </div>
                        <div invisible="type != 'soa'">
                            <strong>SOA Record Format:</strong> Primary nameserver email serial refresh retry expire minimum (e.g., ns1.example.com. admin.example.com. 2023010101 3600 900 1209600 86400)<br/>
                            <em>Specifies authoritative information about a DNS zone, including zone transfers.</em>
                        </div>
                    </group>
                </sheet>
            </form>
        </field>
    </record>

    <!-- DNS Records Search View -->
    <record id="view_dns_record_search" model="ir.ui.view">
        <field name="name">dns.subdomain.search</field>
        <field name="model">dns.subdomain</field>
        <field name="arch" type="xml">
            <search string="DNS Records">
                <field name="name"/>
                <field name="domain_id"/>
                <field name="full_domain"/>
                <field name="value"/>
                <field name="ttl"/>
                <!-- Record Type Filters -->
                <separator/>
                <filter string="A Records" name="a_records" domain="[('type', '=', 'a')]"/>
                <filter string="AAAA Records" name="aaaa_records" domain="[('type', '=', 'aaaa')]"/>
                <filter string="CNAME Records" name="cname_records" domain="[('type', '=', 'cname')]"/>
                <filter string="MX Records" name="mx_records" domain="[('type', '=', 'mx')]"/>
                <filter string="NS Records" name="ns_records" domain="[('type', '=', 'ns')]"/>
                <filter string="TXT Records" name="txt_records" domain="[('type', '=', 'txt')]"/>
                <filter string="SRV Records" name="srv_records" domain="[('type', '=', 'srv')]"/>
                <filter string="CAA Records" name="caa_records" domain="[('type', '=', 'caa')]"/>
                <filter string="SPF Records" name="spf_records" domain="[('type', '=', 'spf')]"/>
                <filter string="SOA Records" name="soa_records" domain="[('type', '=', 'soa')]"/>
                <filter string="PTR Records" name="ptr_records" domain="[('type', '=', 'ptr')]"/>
                <separator/>
                <filter string="Advanced Record Types" name="advanced_types_filter" domain="[('type', 'in', ['ds', 'https', 'naptr', 'sshfp', 'svcb', 'tlsa'])]"/>
                <filter string="DS Records" name="ds_records" domain="[('type', '=', 'ds')]"/>
                <filter string="HTTPS Records" name="https_records" domain="[('type', '=', 'https')]"/>
                <filter string="NAPTR Records" name="naptr_records" domain="[('type', '=', 'naptr')]"/>
                <filter string="SSHFP Records" name="sshfp_records" domain="[('type', '=', 'sshfp')]"/>
                <filter string="SVCB Records" name="svcb_records" domain="[('type', '=', 'svcb')]"/>
                <filter string="TLSA Records" name="tlsa_records" domain="[('type', '=', 'tlsa')]"/>
                <separator/>
                <filter string="Archived" name="inactive" domain="[('active', '=', False)]"/>
                <group expand="0" string="Group By">
                    <filter string="Domain" name="domain" context="{'group_by': 'domain_id'}"/>
                    <filter string="Record Type" name="type" context="{'group_by': 'type'}"/>
                    <filter string="TTL" name="ttl" context="{'group_by': 'ttl'}"/>
                </group>
            </search>
        </field>
    </record>

    <!-- DNS Records Action -->
    <record id="action_dns_records" model="ir.actions.act_window">
        <field name="name">DNS Records</field>
        <field name="res_model">dns.subdomain</field>
        <field name="view_mode">tree,form</field>
        <field name="search_view_id" ref="view_dns_record_search"/>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Create your first DNS record!
            </p>
            <p>
                Manage DNS records with various types (A, AAAA, CAA, CNAME, DS, HTTPS, MX, NAPTR, NS, PTR, SOA, SPF, SRV, SSHFP, SVCB, TLSA, TXT).
            </p>
        </field>
    </record>
</odoo>
