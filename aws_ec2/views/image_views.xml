<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- AMI Tree View -->
    <record id="view_ec2_image_tree" model="ir.ui.view">
        <field name="name">aws.ec2.image.tree</field>
        <field name="model">aws.ec2.image</field>
        <field name="arch" type="xml">
            <tree string="AMIs" decoration-muted="active == False" decoration-danger="state == 'error'" decoration-success="state == 'available'" decoration-info="state == 'pending'">
                <field name="name"/>
                <field name="image_id"/>
                <field name="state"/>
                <field name="architecture"/>
                <field name="platform"/>
                <field name="root_device_type"/>
                <field name="is_public"/>
                <field name="creation_date"/>
                <field name="instance_count"/>
                <field name="active" invisible="1"/>
            </tree>
        </field>
    </record>

    <!-- AMI Form View -->
    <record id="view_ec2_image_form" model="ir.ui.view">
        <field name="name">aws.ec2.image.form</field>
        <field name="model">aws.ec2.image</field>
        <field name="arch" type="xml">
            <form string="AMI">
                <header>
                    <button name="refresh_image_data" string="Refresh" type="object" 
                            invisible="not image_id"/>
                    <button name="deregister_image" string="Deregister AMI" type="object" 
                            invisible="not image_id or instance_count > 0"
                            confirm="Are you sure you want to deregister this AMI? This action cannot be undone."/>
                    <field name="state" widget="statusbar" statusbar_visible="pending,available"/>
                </header>
                <sheet>
                    <div class="oe_title">
                        <h1>
                            <field name="name" placeholder="e.g. My Custom AMI"/>
                        </h1>
                    </div>
                    <group>
                        <group>
                            <field name="image_id" readonly="1"/>
                            <field name="description"/>
                            <field name="architecture" readonly="1"/>
                            <field name="virtualization_type" readonly="1"/>
                            <field name="platform" readonly="1"/>
                            <field name="active"/>
                        </group>
                        <group>
                            <field name="owner_id" readonly="1"/>
                            <field name="is_public" readonly="1"/>
                            <field name="creation_date" readonly="1"/>
                            <field name="image_size" readonly="1"/>
                            <field name="aws_credentials_id" widget="selection" domain="[('active', '=', True)]"/>
                            <field name="aws_region"/>
                        </group>
                    </group>
                    <notebook>
                        <page string="Storage" name="storage">
                            <group>
                                <field name="root_device_type" readonly="1"/>
                                <field name="root_device_name" readonly="1"/>
                                <field name="block_device_mappings" readonly="1"/>
                            </group>
                        </page>
                        <page string="Instances" name="instances">
                            <field name="instance_ids" readonly="1">
                                <tree>
                                    <field name="name"/>
                                    <field name="instance_id"/>
                                    <field name="state"/>
                                    <field name="instance_type"/>
                                </tree>
                            </field>
                        </page>
                        <page string="Tags" name="tags">
                            <field name="tags" placeholder="{'Environment': 'Production', 'Project': 'Website'}"/>
                        </page>
                        <page string="Sync Status" name="sync">
                            <group>
                                <field name="sync_status"/>
                                <field name="last_sync" readonly="1"/>
                                <field name="sync_message" readonly="1"/>
                            </group>
                        </page>
                    </notebook>
                </sheet>
            </form>
        </field>
    </record>

    <!-- AMI Search View -->
    <record id="view_ec2_image_search" model="ir.ui.view">
        <field name="name">aws.ec2.image.search</field>
        <field name="model">aws.ec2.image</field>
        <field name="arch" type="xml">
            <search string="AMIs">
                <field name="name"/>
                <field name="image_id"/>
                <field name="description"/>
                <field name="owner_id"/>
                <filter string="Available" name="available" domain="[('state', '=', 'available')]"/>
                <filter string="Pending" name="pending" domain="[('state', '=', 'pending')]"/>
                <filter string="Public" name="public" domain="[('is_public', '=', True)]"/>
                <filter string="Private" name="private" domain="[('is_public', '=', False)]"/>
                <filter string="Windows" name="windows" domain="[('platform', '=', 'windows')]"/>
                <filter string="Linux" name="linux" domain="[('platform', '=', 'linux')]"/>
                <filter string="EBS-Backed" name="ebs_backed" domain="[('root_device_type', '=', 'ebs')]"/>
                <filter string="Instance Store" name="instance_store" domain="[('root_device_type', '=', 'instance-store')]"/>
                <filter string="In Use" name="in_use" domain="[('instance_count', '>', 0)]"/>
                <filter string="Archived" name="inactive" domain="[('active', '=', False)]"/>
                <group expand="0" string="Group By">
                    <filter string="State" name="group_by_state" domain="[]" context="{'group_by': 'state'}"/>
                    <filter string="Platform" name="group_by_platform" domain="[]" context="{'group_by': 'platform'}"/>
                    <filter string="Architecture" name="group_by_arch" domain="[]" context="{'group_by': 'architecture'}"/>
                    <filter string="Root Device Type" name="group_by_root" domain="[]" context="{'group_by': 'root_device_type'}"/>
                </group>
            </search>
        </field>
    </record>

    <!-- AMI Action -->
    <record id="action_ec2_image" model="ir.actions.act_window">
        <field name="name">AMIs</field>
        <field name="res_model">aws.ec2.image</field>
        <field name="view_mode">tree,form</field>
        <field name="search_view_id" ref="view_ec2_image_search"/>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Import your first AMI
            </p>
            <p>
                Amazon Machine Images (AMIs) provide the information required to launch an instance.
                You can import existing AMIs from your AWS account or create new ones from running instances.
            </p>
        </field>
    </record>

    <!-- Import AMIs Action -->
    <record id="action_import_ec2_images" model="ir.actions.server">
        <field name="name">Import AMIs</field>
        <field name="model_id" ref="model_aws_ec2_image"/>
        <field name="binding_model_id" ref="model_aws_ec2_image"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">action = model.import_images_from_aws()</field>
    </record>

    <!-- Refresh All AMIs Action -->
    <record id="action_refresh_all_ec2_images" model="ir.actions.server">
        <field name="name">Refresh All AMIs</field>
        <field name="model_id" ref="model_aws_ec2_image"/>
        <field name="binding_model_id" ref="model_aws_ec2_image"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">action = model.refresh_all_images()</field>
    </record>
</odoo>