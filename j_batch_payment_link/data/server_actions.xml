<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- Server Action for Batch Payment Generation -->
        <record id="action_batch_payment_generate_link" model="ir.actions.server">
            <field name="name">Batch Payment Generate Link</field>
            <field name="model_id" ref="account.model_account_move"/>
            <field name="binding_model_id" ref="account.model_account_move"/>
            <field name="binding_view_types">list</field>
            <field name="state">code</field>
            <field name="code">
# Import translation function
from odoo import _

# Validate selected invoices
if not records:
    raise UserError(_('Please select at least one invoice.'))

# Filter only customer invoices
customer_invoices = records.filtered(lambda inv: inv.move_type == 'out_invoice')
if not customer_invoices:
    raise UserError(_('Please select only customer invoices.'))

# Check if all invoices belong to the same partner
partners = customer_invoices.mapped('partner_id')
if len(partners) > 1:
    raise UserError(_(
        'All selected invoices must belong to the same customer. '
        'Found invoices for multiple customers: %s'
    ) % ', '.join(partners.mapped('name')))

# Check if all invoices are posted
non_posted = customer_invoices.filtered(lambda inv: inv.state != 'posted')
if non_posted:
    raise UserError(_(
        'All invoices must be posted before creating batch payment. '
        'Non-posted invoices: %s'
    ) % ', '.join(non_posted.mapped('name')))

# Check if all invoices have outstanding amounts
paid_invoices = customer_invoices.filtered(lambda inv: inv.amount_residual &lt;= 0)
if paid_invoices:
    raise UserError(_(
        'All invoices must have outstanding amounts. '
        'Already paid invoices: %s'
    ) % ', '.join(paid_invoices.mapped('name')))

# Check if all invoices have the same currency
currencies = customer_invoices.mapped('currency_id')
if len(currencies) > 1:
    raise UserError(_(
        'All invoices must have the same currency. '
        'Found multiple currencies: %s'
    ) % ', '.join(currencies.mapped('name')))

# Open wizard to create batch payment
action = {
    'name': _('Create Batch Payment'),
    'type': 'ir.actions.act_window',
    'res_model': 'batch.payment.wizard',
    'view_mode': 'form',
    'target': 'new',
    'context': {
        'default_invoice_ids': [(6, 0, customer_invoices.ids)],
        'active_ids': customer_invoices.ids,
        'active_model': 'account.move',
    }
}
            </field>
        </record>

        <!-- Sequence for Batch Payment -->
        <record id="seq_batch_payment" model="ir.sequence">
            <field name="name">Batch Payment</field>
            <field name="code">batch.payment</field>
            <field name="prefix">BP</field>
            <field name="padding">5</field>
            <field name="number_next">1</field>
            <field name="number_increment">1</field>
        </record>
    </data>
</odoo>