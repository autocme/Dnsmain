<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="payment_success_redirect" name="Payment Success Redirect">
        <t t-call="website.layout">
            <div id="wrap" class="oe_structure">
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-lg-8 col-md-10">

                            <!-- Success Message -->
                            <div class="text-center mt-5 mb-4">
                                <div class="saas_success_icon mb-4">
                                    <i class="fa fa-check-circle" style="font-size: 4rem; color: #28a745;"></i>
                                </div>

                                <h2 class="text-success mb-3">
                                    <t t-if="is_paid_package">ðŸŽ‰ Payment Successful!</t>
                                    <t t-else="">ðŸŽ‰ Free Trial Activated!</t>
                                </h2>
                                <h4 class="text-muted">We are creating your system and you'll be redirected after finish</h4>
                            </div>

                            <!-- Progress and Redirect Info -->
                            <div class="text-center">
                                <div class="alert alert-info">
                                    <i class="fa fa-cogs fa-spin"></i>
                                    <strong id="deploymentStatusText">Creating your system...</strong>
                                    <div class="saas_loading_dots mt-3">
                                        <div class="dot"></div>
                                        <div class="dot"></div>
                                        <div class="dot"></div>
                                    </div>
                                    <div id="deploymentError" class="mt-3" style="display: none;">
                                        <i class="fa fa-exclamation-triangle" style="color: #e74c3c;"></i>
                                        <strong style="color: #e74c3c;">System creation failed. Please contact support for assistance.</strong>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <!-- Deployment Monitoring Script -->
            <script type="text/javascript">
                <![CDATA[
                document.addEventListener('DOMContentLoaded', function() {
                    var clientId = ]]><t t-esc="client.id"/><![CDATA[;
                    var clientDomain = ']]><t t-esc="client_domain"/><![CDATA[';
                    var deploymentInitiated = ]]><t t-esc="'true' if deployment_initiated else 'false'"/><![CDATA[;
                    var isPaidPackage = ]]><t t-esc="'true' if is_paid_package else 'false'"/><![CDATA[;

                    console.log('Payment success redirect: Starting deployment monitoring for client:', clientId);

                    // If no deployment was initiated, redirect immediately after short delay
                    if (!deploymentInitiated) {
                        console.log('No deployment needed, redirecting immediately');
                        setTimeout(function() {
                            window.location.href = clientDomain;
                        }, 3000);
                        return;
                    }

                    // Use the same beautiful full-screen loading screen for both free trial and paid packages
                    showDeploymentMonitoring(clientId, clientDomain, !isPaidPackage);
                    
                    /**
                     * Show deployment monitoring screen with job queue tracking
                     * (Duplicated from purchase_confirm.js to ensure it works in payment success context)
                     */
                    function showDeploymentMonitoring(clientId, clientDomain, isFreeTrial) {
                        // Hide the template content
                        document.body.innerHTML = '';
                        
                        // Create full-screen deployment overlay
                        var deploymentOverlay = document.createElement('div');
                        deploymentOverlay.id = 'saasDeploymentOverlay';
                        deploymentOverlay.className = 'saas_deployment_overlay';
                        deploymentOverlay.innerHTML = `
                            <div class="saas_deployment_content">
                                <div class="saas_deployment_icon">
                                    <i class="fa fa-cogs fa-spin" aria-hidden="true"></i>
                                </div>
                                <h3>${isFreeTrial ? 'ðŸŽ‰ Free Trial Activated!' : 'ðŸ’³ Payment Successful!'}</h3>
                                <p id="deploymentStatusText">We are creating your system and you'll be redirected after finish</p>
                                <div class="saas_loading_dots">
                                    <div class="dot"></div>
                                    <div class="dot"></div>
                                    <div class="dot"></div>
                                </div>
                                <div id="deploymentError" class="saas_deployment_error" style="display: none;">
                                    <i class="fa fa-exclamation-triangle"></i>
                                    <p id="deploymentErrorMessage">System creation failed. Please contact support for assistance.</p>
                                </div>
                            </div>
                        `;
                        
                        // Full viewport coverage styles  
                        deploymentOverlay.style.cssText = `
                            position: fixed !important;
                            top: 0 !important;
                            left: 0 !important;
                            right: 0 !important;
                            bottom: 0 !important;
                            width: 100vw !important;
                            height: 100vh !important;
                            background: linear-gradient(135deg, #2F3349 0%, #1a1e30 100%) !important;
                            display: flex !important;
                            align-items: center !important;
                            justify-content: center !important;
                            z-index: 999999 !important;
                            color: white !important;
                            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
                            opacity: 1 !important;
                            margin: 0 !important;
                            padding: 0 !important;
                            border: none !important;
                            box-sizing: border-box !important;
                        `;
                        
                        // Prevent body scrolling while overlay is shown
                        document.body.style.overflow = 'hidden';
                        
                        document.body.appendChild(deploymentOverlay);
                        
                        // Start monitoring deployment status
                        monitorDeploymentStatus(clientId, clientDomain);
                    }

                    /**
                     * Monitor deployment status using job queue
                     */
                    function monitorDeploymentStatus(clientId, clientDomain) {
                        console.log('Starting deployment monitoring for client:', clientId);
                        
                        var checkInterval = setInterval(function() {
                            fetch('/saas/client/deployment_status/' + clientId, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-Requested-With': 'XMLHttpRequest'
                                },
                                body: JSON.stringify({
                                    jsonrpc: '2.0',
                                    method: 'call',
                                    params: {}
                                })
                            })
                            .then(function(response) {
                                return response.json();
                            })
                            .then(function(data) {
                                if (data.result) {
                                    var status = data.result.status;
                                    var message = data.result.message || 'Creating your system...';
                                    
                                    console.log('Deployment status:', status, 'Message:', message);
                                    
                                    // Update status text (but prevent updates for error states - including 'cancel' without 'd')
                                    var statusTextElement = document.getElementById('deploymentStatusText');
                                    if (statusTextElement && status !== 'completed' && status !== 'failed' && status !== 'cancelled' && status !== 'cancel') {
                                        statusTextElement.textContent = message;
                                    }
                                    
                                    if (status === 'completed' && data.result.deployment_complete) {
                                        // Deployment completed successfully
                                        clearInterval(checkInterval);
                                        console.log('System creation completed, redirecting to:', clientDomain);
                                        
                                        // Show completion message exactly like the free trial approach
                                        if (statusTextElement) {
                                            statusTextElement.textContent = 'Deployment completed! Redirecting...';
                                        }
                                        
                                        // Clean up domain URL for redirect
                                        var cleanDomain = clientDomain;
                                        if (cleanDomain && !cleanDomain.startsWith('http')) {
                                            cleanDomain = 'https://' + cleanDomain;
                                        }
                                        
                                        // Redirect to client instance (2 second delay to show completion message)
                                        setTimeout(function() {
                                            document.body.style.overflow = '';
                                            window.location.href = cleanDomain;
                                        }, 2000);
                                        
                                    } else if (status === 'failed' || status === 'cancelled' || status === 'cancel') {
                                        // Deployment failed or was cancelled
                                        clearInterval(checkInterval);
                                        console.error('System creation failed or was cancelled');
                                        
                                        // Hide loading elements and show error (exactly like free version)
                                        var deploymentIcon = document.querySelector('.saas_deployment_icon i');
                                        var loadingDots = document.querySelector('.saas_loading_dots');
                                        var errorDiv = document.getElementById('deploymentError');
                                        
                                        if (deploymentIcon) {
                                            deploymentIcon.className = 'fa fa-exclamation-triangle';
                                            deploymentIcon.style.color = '#e74c3c';
                                        }
                                        if (loadingDots) {
                                            loadingDots.style.display = 'none';
                                        }
                                        if (errorDiv) {
                                            errorDiv.style.display = 'block';
                                            // Update error message with support phone if available
                                            updateErrorMessageWithSupportPhone();
                                        }
                                        // Remove duplicate error message - only show the message in the red error box
                                        if (statusTextElement) {
                                            statusTextElement.style.display = 'none';
                                        }
                                    }
                                } else {
                                    console.error('Invalid response from deployment status check:', data);
                                }
                            })
                            .catch(function(error) {
                                console.error('Error checking deployment status:', error);
                                // Continue monitoring despite errors
                            });
                        }, 3000); // Check every 3 seconds
                        
                        // Safety timeout after 10 minutes
                        setTimeout(function() {
                            clearInterval(checkInterval);
                            console.log('Deployment monitoring timeout after 10 minutes, redirecting anyway');
                            
                            // Clean up domain URL for redirect
                            var cleanDomain = clientDomain;
                            if (cleanDomain && !cleanDomain.startsWith('http')) {
                                cleanDomain = 'https://' + cleanDomain;
                            }
                            
                            document.body.style.overflow = '';
                            window.location.href = cleanDomain;
                        }, 600000);
                    }

                    /**
                     * Update error message with support phone number from settings
                     */
                    function updateErrorMessageWithSupportPhone() {
                        fetch('/saas/support/phone', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({
                                jsonrpc: '2.0',
                                method: 'call',
                                params: {}
                            })
                        })
                        .then(function(response) {
                            return response.json();
                        })
                        .then(function(data) {
                            if (data.result && data.result.success) {
                                var errorMessageElement = document.getElementById('deploymentErrorMessage');
                                if (errorMessageElement) {
                                    errorMessageElement.textContent = data.result.error_message;
                                }
                            }
                        })
                        .catch(function(error) {
                            console.log('Could not fetch support phone number:', error);
                            // Keep default message if fetch fails
                        });
                    }
                });
                ]]>
            </script>
        </t>
    </template>
</odoo>